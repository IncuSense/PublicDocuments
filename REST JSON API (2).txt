The JSON API is as follows. Using an HTTP connection send a "GET" request for the True Meter number by calling the resource "get_true_meter_data_2", where the number 2 can be any number from 1-96 and should correspond to the actual True Meter number of interest.

 

Here's a simple javascript/jquery example:


// This function sends the request to the core module to access True Meter Data through HTTP. The data is returned in JSON format.

function GetTrueMeterData(meternumber)
{

if(meternumber < 1 || meternumber > 96) return;

var TM = "get_true_meter_data_" + meternumber;


$.get(TM, function(data) {
var TrueMeterData = JSON.parse(data);

var TotalKWH = TrueMeterData.SUMMARY.kwh;

// Do something with the data

});

}

 

// This is an example of the True Meter JSON object. The "SUMMARY" section represents the total/average values of all the channels assigned to the True Meter. "CH1" is  the first channel assigned, "CH2" is the second channel assigned and "CH3" is the third channel assigned. A True Meter can be 1-3 channels.

 

{
"SUMMARY": {
"meternumber": "1",
"numberchannels": "3",
"metername": "Circuit 1",
"timestamp": "1583958775",
"neutralcurrent": "0.84",
"voltsLL": "0.00",
"voltsTHDLL": "0.00",
"voltsLN": "121.51",
"voltsTHDLN": "3.52",
"kwh": "15.00",
"kvarh": "7.53",
"kvah": "18.16",
"kw": "0.10",
"kvar": "0.01",
"kva": "0.10",
"current": "0.28",
"pf": "1.00",
"thdi": "1.22",
"currentangle": "3.65",
"THDcurrent": "1.22",
"maxcurrent": "10.93",
"maxkw": "3.91",
"currentdemand": "0.28",
"kwdemand": "0.10",
"maxcurrentdemand": "2.92",
"maxkwdemand": "1.07",
"kwhsnapshot": "15.00",
"crestfactor": "0.46",
"percentutilization": "0.00"
},
"CH1": {
"phase": "0",
"channelnumber": "1",
"ctsize": "100",
"breakersize": "20",
"alarmstatus": "14338",
"votlagephase": "0",
"voltsLN": "121.45",
"voltsTHDLN": "3.52",
"kwh": "15.00",
"kvarh": "7.53",
"kvah": "18.16",
"kw": "0.10",
"kvar": "0.02",
"kva": "0.10",
"current": "0.84",
"pf": "-1.00",
"thdi": "3.65",
"currentangle": "-3.26",
"THDcurrent": "3.65",
"maxcurrent": "10.96",
"maxkw": "1.31",
"currentdemand": "0.84",
"kwdemand": "0.10",
"maxcurrentdemand": "8.74",
"maxkwdemand": "1.07",
"kwhsnapshot": "14.99",
"crestfactor": "1.38",
"percentutilization": "4.21"
},
"CH2": {
"phase": "0",
"channelnumber": "2",
"ctsize": "100",
"breakersize": "20",
"alarmstatus": "4096",
"votlagephase": "1",
"voltsLN": "121.52",
"voltsTHDLN": "3.52",
"kwh": "0.00",
"kvarh": "0.00",
"kvah": "0.00",
"kw": "0.00",
"kvar": "0.00",
"kva": "0.00",
"current": "0.00",
"pf": "0.00",
"thdi": "0.00",
"currentangle": "0.00",
"THDcurrent": "0.00",
"maxcurrent": "10.96",
"maxkw": "1.31",
"currentdemand": "0.00",
"kwdemand": "0.00",
"maxcurrentdemand": "0.03",
"maxkwdemand": "0.00",
"kwhsnapshot": "0.00",
"crestfactor": "0.00",
"percentutilization": "0.00"
},
"CH3": {
"phase": "0",
"channelnumber": "3",
"ctsize": "100",
"breakersize": "20",
"alarmstatus": "4096",
"votlagephase": "2",
"voltsLN": "121.55",
"voltsTHDLN": "3.53",
"kwh": "0.00",
"kvarh": "0.00",
"kvah": "0.00",
"kw": "0.00",
"kvar": "0.00",
"kva": "0.00",
"current": "0.00",
"pf": "0.00",
"thdi": "0.00",
"currentangle": "0.00",
"THDcurrent": "0.00",
"maxcurrent": "10.89",
"maxkw": "1.30",
"currentdemand": "0.00",
"kwdemand": "0.00",
"maxcurrentdemand": "0.00",
"maxkwdemand": "0.00",
"kwhsnapshot": "0.00",
"crestfactor": "0.00",
"percentutilization": "0.00"
}
}

"/get_JSON_CustomMeter_kwh"
{
	"KWHDATA": [{
		"timestamp": "1583958775",
		"number of meters": "5"
		},
		{
			"number circuits":"3",
			"summary:"12.45",
			"circuit1:"11.9",
			"circuit2:"13.4",
			"circuit3:"12.1" 
		},
		{
			"number circuits":"2",
			"summary:"12.45",
			"circuit1:"11.9",
			"circuit2:"13.4"
		},
		{
			"number circuits":"1",
			"circuit1:"11.9"
		},
		{
			"number circuits":"1",
			"circuit1:"11.9"
		},
		{
			"number circuits":"3",
			"circuit1:"11.9",
			"circuit2:"13.4",
			"circuit3:"12.1" 
		}	
	}]
}

"/get_JSON_CustomMeter_kw"
"/get_JSON_CustomMeter_kva"
"/get_JSON_CustomMeter_kvar"
"/get_JSON_CustomMeter_amps"
"/get_JSON_CustomMeter_pf"

"/get_JSON_kwh_data"

{
	"KWHDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_kvah_data"

{
	"KWHDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_kvarh_data"

{
	"KWHDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_kw_data"

{
	"KWDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}


"/get_JSON_kva_data"

{
	"KVADATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_kvar_data"

{
	"KVARDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_pf_data"

{
	"PFDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_amps_data"

{
	"DATAAMPS": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_thd_data"

{
	"THDDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_alarm_data"

{
	"ALARMDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_breaker_size"

{
	"BREAKERDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_ct_size"

{
	"CTSIZEDATA": {
		"timestamp": "1583958775",
		"Circuit1": "1.0",
		"Circuit2": "2.1",
		...
		"Circuit96": "3.2"
	}
}

"/get_JSON_voltage_data"

{
	"VOLTAGEDATA": {
		"timestamp": "1583958775",
		"VoltsL1": "121.0",
		"VoltsL2": "122.1",
		"VoltsL3": "122.3",
		"VoltsL12": "208.4",
		"VoltsL23": "208.5",
		"VoltsL31": "208.4",
		"VoltsTHDL1": "1.0",
		"VoltsTHDL2": 2.1",
		"VoltsTHDL3": "2.3",
		"VoltsL1Alarm": "12123",
		"VoltsL2Alarm": "12212",
		"VoltsL3Alarm": "12232",
	}
}

/The REST call "/get_JSON_tm_summary" returns an array of true meter objects. Element [0] is for voltage info and timestamp for all data. Element [1] - [96] are the true meters, where index [2] corresponds to true meter 2 data.

The data can be accessed as follows:

Data.TM[2].amps would point to 4567.89. Which is the average amps for true meter 2.

REST call /get_JSON_tm_summary
{
	"TM":[{
		"timestamp": "1644872819",
		"VoltsL1": 120.14,
		"VoltsL2": 120.14,
		"VoltsL3": 120.14,
		"VoltsL12": 208.22,
		"VoltsL23": 208.22,
		"VoltsL31": 208.22,
		"VoltsL1Alarm": 65535,
		"VoltsL2Alarm": 65535,
		"VoltsL3Alarm": 65535
	},
	{
		"amps":1234.01,
		"pf":-0.99,
		"kw":1235.1,
		"kwh":12345678.12,
		"alarm":65535
	},
	{
		"amps":4567.89,
		"pf":-0.99,
		"kw":1235.1,
		"kwh":12345678.12,
		"alarm":65535
	},
	{
		"amps":34.01,
		"pf":-0.99,
		"kw":27.70,
		"kwh":2426520.00,
		"alarm":65535
	},
	{
		"amps":0.00,
		"pf":0.00,
		"kw":0.00,
		"kwh":0.00,
		"alarm":0
	},
	{
		"tm":x	// where x = tm # - This means the tm number has not been assigned and just shows the tm element
	}],

	"e":"over" // or "e":"good" - this is the status flag

}
